{"version":3,"sources":["assets/images/logo.svg","assets/images/diagram.svg","components/SideBar.jsx","context/reducers.js","utils/dataClient.js","context/context.js","components/TaskCard.jsx","components/Recomended/RecomendedPlayer.jsx","components/TaskListContainer.jsx","components/Literature.jsx","components/CustomButton/CustomButton.jsx","components/Physics/Question.jsx","components/Physics/Physics.jsx","components/NotFound.jsx","utils/Components.js","components/SubjectContainer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","SideBar","className","to","src","logo","alt","activeClassName","href","TYPES","reducers","state","action","type","index","completed_subject","findIndex","name","id","payload","selected","push","subjects","axios","defaults","baseURL","initialState","AppContext","createContext","dispatch","AppProvider","children","useReducer","useEffect","get","then","resp","data","catch","er","console","log","Provider","value","TaskCard","title","duration","description","rest","useContext","useState","done","pass","result","setResult","item","filter","length","column","class","RecomendedPlayer","props","style","flexBasis","url","width","height","controls","config","file","attributes","controlsList","onContextMenu","e","preventDefault","TaskListContainer","params","subject_list","setSubjectList","display","heightRelativeToParent","map","key","Literature","subject","answer","setAnswer","redirect","setRedirect","error","setError","handleFormSubmit","onSubmit","onChange","target","onClick","CustomButton","handleChange","htmlFor","Question","question","activeQs","hasImage","split","diagram","has","guesses","guess","question_id","checked","Physics","Set","setActiveQs","setGuesses","ready","setReady","add","found","guess_id","questions","size","correct_ans","i","answers","Math","round","disabled","NotFound","Component","components","literature","physics","notfound","TagName","SubjectContainer","undefined","selectedSubject","setSelectedSubject","useParams","prev","toLowerCase","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.11fbf57f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9bff32ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/diagram.dab5baf0.svg\";","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nfunction SideBar() {\r\n\r\n    return (\r\n        <div className=\"sidebar off-canvas-sidebar\">\r\n            <Link to='/' className=\"logo\"><img src={logo} alt=\"\"/></Link>\r\n            <ul>\r\n            <li>\r\n                <NavLink activeClassName=\"active\" to=\"/subject\">\r\n                    <i className=\"fas fa-calculator\"></i>\r\n                    <span>Caroline </span>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <a href=\"#\">\r\n                <i className=\"fas fa-flag\"></i>\r\n                <span>Lesson Plan</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/supplimentary\" activeClassName=\"active\">\r\n                    <i className=\"fas fa-tasks\"></i>\r\n                    <span>Supplementary classNameess</span>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <a href=\"#\">\r\n                <i className=\"fas fa-cog\"></i>\r\n                <span>Manage</span>\r\n                </a>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","export const  TYPES = {\r\n    SUBJECT_DONE: 'SUBJECT_DONE',\r\n    LOAD_SUBJECT: 'LOAD_SUBJECT'\r\n};\r\n\r\n\r\nexport const  reducers = (state={}, action) => {\r\n    switch (action.type) {\r\n        case TYPES.SUBJECT_DONE:\r\n            const index = state.completed_subject.findIndex(({name, id}) => action.payload.name === name);\r\n            //completed subject exist or add to complete\r\n            if(index >= 0) {\r\n                let completed_subject = state.completed_subject;\r\n                let selected = completed_subject[index];\r\n                \r\n                selected = {...selected, ...action.payload};\r\n                completed_subject[index] = selected;\r\n                \r\n                return {...state, completed_subject: [...completed_subject]};\r\n            }\r\n\r\n            const completed_subject = [...state.completed_subject];\r\n            completed_subject.push(action.payload);\r\n            return {\r\n                ...state,\r\n                completed_subject: [...completed_subject]\r\n            };\r\n        \r\n        case TYPES.LOAD_SUBJECT:\r\n            return {\r\n                ...state,\r\n                subjects: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://prolearn-fb6bb.firebaseio.com';\r\n\r\nexport const getSubjects = () => {\r\n    return axios.get('/subjects.json').then(resp => resp.data);\r\n}\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport{ reducers, TYPES }from './reducers';\r\nimport { getSubjects } from '../utils/dataClient';\r\n\r\n//initial state\r\nconst initialState = {\r\n    completed_subject: [],\r\n    subjects: []\r\n};\r\n\r\n//context provider we will use for extract data from this\r\nconst AppContext = createContext({\r\n    state: initialState,\r\n    dispatch: () => null\r\n});\r\n\r\n//provider that will wrap app entry point\r\nconst AppProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducers, initialState);\r\n\r\n    useEffect(() => {\r\n        getSubjects()\r\n            .then(data => {\r\n                dispatch({\r\n                    type: TYPES.LOAD_SUBJECT,\r\n                    payload: [...data]\r\n                });\r\n            })\r\n            .catch(er => console.log(er));\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport {AppProvider, AppContext};","import React, { useContext, useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppContext } from '../context/context';\r\n\r\nexport default function TaskCard({title, duration, description, ...rest}) {\r\n    const { state } = useContext(AppContext);\r\n    const [result, setResult] = useState({done: false, pass: false});\r\n\r\n    useEffect(() => {\r\n        const item = state.completed_subject.filter(item =>  title === item.name);\r\n        if(item.length) {\r\n            setResult({done: item[0].done, pass: item[0].pass});\r\n        }\r\n\r\n    }, [state, title]);\r\n\r\n    return (\r\n        <div className={rest.column ? rest.column : 'col-md-4'}>\r\n            <NavLink to={'/subject/'+ title} activeClassName='activeRoute'>\r\n                <div class=\"taskbox\">\r\n                    <div className=\"header\">\r\n                        <h2>{title ? title : 'History'} <span className=\"status\"></span> </h2>\r\n                        <p><strong>Estimated Time: {duration ? duration : '2 hours'}</strong></p>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        {description ? description : 'Questions about Modern World History will help you to understand even deeper about history.'}\r\n                    </div>\r\n                    <div className={result.done && result.pass ? 'done' : 'd-none'}>\r\n                        <span className=\"text\">Done !</span>\r\n                    </div>\r\n                    <div className={result.done === true && result.pass === false ? 'fail' : 'd-none'}>\r\n                        <span className=\"text\">Opps.. Try again !</span>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport default function RecomendedPlayer(props) {\r\n\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card p-3 player-container\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div className='player-wrapper' style={{flexBasis: '70%'}}>\r\n                        <ReactPlayer \r\n                        url=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\" \r\n                        width=\"100%\" height=\"100%\" \r\n                        controls\r\n                        config={{ file: { attributes: { controlsList: 'nodownload' } } }}\r\n                        onContextMenu={e => e.preventDefault()}/>\r\n                    </div>\r\n                    <div className=\"info ml-2\">\r\n                        <h4>How & Why We Read</h4>\r\n                        <p><strong>- CrashCourse</strong></p>\r\n                        <div className=\"match d-flex justify-content-between align-items-center\">\r\n                            <h3>36.4%</h3>\r\n                            <p>match</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport { AppContext } from '../context/context';\r\nimport TaskCard from './TaskCard';\r\nimport RecomendedPlayer from './Recomended/RecomendedPlayer';\r\n\r\nexport default function TaskListContainer(params) {\r\n    const [subject_list, setSubjectList] = useState([]);\r\n    const {state} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n       setSubjectList(state.subjects);\r\n    }, [state]);\r\n\r\n    return (\r\n        <div className=\"taskListContainer p-4\">\r\n            <h4>OverView</h4>\r\n            <h3>Today's Task</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\" style={{height: \"100vh\", display: \"flex\"}}>\r\n                    <CustomScroll heightRelativeToParent=\"100%\">\r\n                        <div className=\"row\">\r\n                            {subject_list.map(item => (\r\n                                <TaskCard {...item} key={item.id} />\r\n                            ))}\r\n                        </div>\r\n\r\n                        <h4>Recomended Tasks</h4>\r\n                        <div className=\"row\">\r\n                            <RecomendedPlayer />\r\n                            <RecomendedPlayer />\r\n                        </div>\r\n                    </CustomScroll>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <h5>Third Column</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppContext } from '../context/context';\r\nimport { TYPES } from '../context/reducers';\r\n\r\nexport default function Literature({subject}) {\r\n    const [answer, setAnswer] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const {state, dispatch} = useContext(AppContext);\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(answer.length < 20) {\r\n            setError('answer should be greater than 20 character');\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: TYPES.SUBJECT_DONE,\r\n            payload: {\r\n                done: true,\r\n                name: subject.title,\r\n                id: subject.id,\r\n                pass: true\r\n            }\r\n        });\r\n\r\n        setRedirect(true);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setAnswer(e.target.value);\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const item = state.completed_subject.filter(item => item.id === subject.id);\r\n\r\n        if(item.length && item[0].done) {\r\n            dispatch({\r\n                type: TYPES.SUBJECT_DONE,\r\n                payload: {\r\n                    done: false,\r\n                    name: subject.title,\r\n                    id: subject.id\r\n                }\r\n            });\r\n        }\r\n        \r\n    }, [subject]);\r\n\r\n    return (\r\n        <div className='literature p-4'>\r\n            {redirect ? <Redirect to=\"/\" /> : null}\r\n            <h3>question</h3>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div className=\"form-group\">\r\n                    <textarea style={{width: '100%', height: '400px'}} className=\"form-control rounded\" name='answer' onChange={handleChange} value={answer}></textarea>\r\n                    {error && <div className='alert alert-danger mt-2'>{error}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={handleFormSubmit}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default function CustomButton(props){\r\n    return (\r\n        <div className=\"custom-button\">\r\n            <input type=\"radio\" name={props.name ? props.name : 'button'} id={props.id ? props.id : 'button'} onChange={props.handleChange} value={props.value ? props.value : ''} />\r\n            <label htmlFor={props.id ? props.id : 'button'}>{props.children}</label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Latex from 'react-latex';\r\nimport diagram from '../../assets/images/diagram.svg';\r\nimport CustomButton from '../CustomButton/CustomButton'\r\n\r\nexport default function Question({title, question, ...props}) {\r\n    const activeQs = props.activeQs;\r\n    title = question.hasImage ? (<p>{title.split('--')[0]}<br/> <img src={diagram} alt=''/> <br/>{title.split('--')[1]}</p>) : <p>{title}</p>;\r\n\r\n    return (\r\n        <div className={`card p-4 text-center m-4 shadow rounded question-container ${activeQs.has(question.id) !== false ? '' : 'not-active'}`}>\r\n\r\n            {title}\r\n\r\n            <div className=\"select-area d-flex justify-content-center\">\r\n                {question.guesses && question.guesses.map((item) => (\r\n                    <CustomButton id={item.guess} name={`question-${question.id}`} handleChange={() => props.handleChange({...item, question_id: question.id})} key={item.id} checked={false}>\r\n                       <Latex>{item.guess}</Latex> \r\n                    </CustomButton>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport { AppContext } from '../../context/context';\r\nimport { TYPES } from '../../context/reducers';\r\nimport Question from './Question';\r\n\r\nexport default function Physics({subject, ...rest}) {\r\n    const {state, dispatch} = useContext(AppContext);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [activeQs, setActiveQs] = useState(new Set([1]));\r\n    const [guesses, setGuesses] = useState([]);\r\n    const [ready, setReady] = useState(true);\r\n\r\n    const handleChange = (item) => {\r\n\r\n        //activing next question active after user chose one\r\n        activeQs.add(item.question_id+1);\r\n        setActiveQs(activeQs);\r\n\r\n        //loping over guess for checking that question allready answered or not\r\n        let found = false;\r\n        for(let guess of guesses) {\r\n            if(guess.question_id === item.question_id) {\r\n                guess.guess_id = item.id;\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        //checking guess found or not\r\n        if(!found) {\r\n            setGuesses([...guesses, {question_id: item.question_id, guess_id: item.id}]);\r\n        } else {\r\n            setGuesses([...guesses]);\r\n        }\r\n\r\n        //all question answerded or not\r\n        setReady(subject.questions.length !== activeQs.size-1);\r\n\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let correct_ans = 0;\r\n        for (let i in  guesses) {\r\n            if(guesses[i].question_id === subject.answers[i].question && guesses[i].guess_id === subject.answers[i].guess) {\r\n                correct_ans += 1;\r\n            } \r\n        }\r\n\r\n        dispatch({\r\n            type: TYPES.SUBJECT_DONE,\r\n            payload: {\r\n                name: subject.title,\r\n                id: subject.id,\r\n                done: true,\r\n                pass: correct_ans >= Math.round(subject.answers.length/2)\r\n            }\r\n        });\r\n\r\n        setRedirect(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const item = state.completed_subject.filter(item => item.id === subject.id);\r\n        //reset course state for redo\r\n        if(item.length && item[0].done) {\r\n            dispatch({\r\n                type: TYPES.SUBJECT_DONE,\r\n                payload: {\r\n                    done: false,\r\n                    name: subject.title,\r\n                    id: subject.id\r\n                }\r\n            });\r\n        }\r\n        \r\n    }, [subject]);\r\n\r\n\r\n    return (\r\n        <div className=\"physics\">\r\n            {redirect && <Redirect to=\"/\" />}\r\n            <h4>Physics</h4>\r\n            <div className=\"question-area\" style={{height: \"100vh\", display: \"flex\"}}>\r\n                <CustomScroll heightRelativeToParent=\"100%\">\r\n                    {/** question and guess component**/}\r\n                    {subject && subject.questions.map(item => (\r\n                        <Question  handleChange={handleChange} title={item.question} key={item.id} question={item} activeQs={activeQs} />\r\n                    ))}\r\n                    {/**submit button */}\r\n                    <div className=\"form-group text-center\">\r\n                        <button className=\"btn btn-primary\" onClick={handleSubmit} type=\"button\" disabled={ready}>Submit</button>\r\n                    </div>\r\n                </CustomScroll>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\n\r\nexport default function NotFound(params) {\r\n    return (\r\n        <div className=\"alert alert-warning text-center p-4\">\r\n            <h5>Component Not Found Try</h5>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport Literature from '../components/Literature';\r\nimport Physics from '../components/Physics/Physics';\r\nimport NotFound from '../components/NotFound';\r\n\r\nexport default function Component({name, ...rest}) {\r\n\r\n    const components = {\r\n        literature: Literature,\r\n        physics: Physics,\r\n        notfound: NotFound\r\n    }\r\n\r\n    name = components[name] ? name : 'notfound';\r\n\r\n    const TagName = components[name];\r\n\r\n    return (<TagName {...rest} />);\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AppContext } from '../context/context';\r\nimport TaskCard from './TaskCard';\r\nimport Component from '../utils/Components';\r\n\r\nexport default function SubjectContainer(params) {\r\n    const [selectedSubject, setSelectedSubject] = useState(undefined);\r\n    const {state:{subjects}} = useContext(AppContext);\r\n    const { name } = useParams();\r\n\r\n    useEffect(() => {\r\n        let index = subjects.findIndex(item => item.title === name);\r\n        setSelectedSubject(prev => (index >= 0 ? subjects[index] : null));\r\n    }, [subjects, name]);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                {subjects.map(item => (<TaskCard {...item}  column='col-md-12' key={item.id} />))}\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                {selectedSubject ? <Component name={name.toLowerCase()} subject={selectedSubject} /> : <h3>Component not ready</h3>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport SideBar from \"./components/SideBar\";\nimport TaskListContainer from \"./components/TaskListContainer\";\nimport SubjectContainer from './components/SubjectContainer';\nimport { AppProvider } from './context/context';\n\nfunction App() {\n  return (\n      <div className=\"main-panel\">\n          <Router>\n            <AppProvider>\n                <SideBar />\n             \n                <Switch>\n                  <Route path=\"/subject/:name\">\n                    <SubjectContainer />\n                  </Route>\n                  <Route path=\"/subject\">\n                    <SubjectContainer />\n                  </Route>\n                  <Route path='/'>\n                    <TaskListContainer />\n                  </Route>\n                </Switch>\n            </AppProvider>\n          </Router>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/custom-scroll.css';\nimport './assets/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}