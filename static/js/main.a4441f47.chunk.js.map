{"version":3,"sources":["components/SideBar.jsx","context/reducers.js","utils/dataClient.js","context/context.js","components/TaskCard.jsx","components/RightSidebar.jsx","components/RecomendedVideoPlayer/RecomendedPlayer.jsx","components/Spinner/Spinner.jsx","components/CircleProgressBar/CircleProgressBar.jsx","components/TaskListContainer.jsx","utils/HorizontalTimeLine.jsx","components/RewardClassContainer/RewardSubject/RewardSubject.jsx","components/RewardClassContainer/RewardClassContainer.jsx","components/Literature/Literature.jsx","components/CustomButton/CustomButton.jsx","components/Physics/Question.jsx","components/Physics/Physics.jsx","components/NotFound.jsx","utils/Components.js","components/TaskContainer.jsx","components/Home/Home.jsx","components/RewardClassContainer/RewardClasses/RewardTask/RewardTask.jsx","components/RewardClassContainer/RewardClasses/RewardClasses.jsx","components/RewardClassContainer/RewardExercise/MathQuestion/MathQuestion.jsx","components/Timer/Timer.jsx","components/RewardClassContainer/RewardExercise/RewardExercise.jsx","components/FullScreenConfetti/FullScreenConfetti.jsx","App.jsx","serviceWorker.js","index.js","assets/images/logo.svg","assets/images/diagram.svg","assets/images/reward.svg"],"names":["SideBar","props","className","to","src","logo","alt","activeClassName","isActive","match","location","pathname","TYPES","reducers","state","action","type","index","completed_subject","findIndex","name","id","payload","selected","push","subjects","reward","loading","classes","excercies","confetti","show","showTime","message","axios","defaults","baseURL","fetchData","path","get","then","resp","data","initialState","AppContext","createContext","dispatch","AppProvider","children","useReducer","useEffect","catch","er","console","log","Provider","value","TaskCard","title","duration","description","useContext","useState","done","pass","result","setResult","item","filter","length","RightSidebar","href","RecomendedPlayer","url","width","height","controls","config","file","attributes","controlsList","preload","onContextMenu","e","preventDefault","Spinner","circleConfig","CircleProgressBarBase","trailStrokeColor","percentage","strokeColor","innerText","viewBox","cx","cy","r","fill","stroke","strokeWidth","x1","y1","offset","stopColor","strokeDasharray","strokeDashoffset","x","y","textAnchor","TaskListContainer","params","subject_list","setSubjectList","showSpinner","setShowSpinner","heightRelativeToParent","map","key","CircleProgressBar","HorizontalTimeLine","score","style","RewardSubject","showMenu","setShowMenu","useRouteMatch","hideDropDown","body","document","querySelector","addEventListener","removeEventListener","subject_name","onClick","data-toggle","aria-haspopup","aria-expanded","x-placement","class","grade","button","RewardClassContainer","useLocation","history","useHistory","redirect","replace","err","previous_score","Literature","subject","answer","setAnswer","setRedirect","error","setError","handleFormSubmit","onSubmit","fontSize","onChange","target","placeholder","CustomButton","handleChange","htmlFor","Question","question","activeQs","hasImage","split","diagram","has","guesses","guess","question_id","checked","Physics","Set","setActiveQs","setGuesses","ready","setReady","add","found","guess_id","questions","size","display","correct_ans","i","answers","Math","round","disabled","NotFound","Component","rest","components","literature","physics","notfound","TagName","TaskContainer","undefined","selectedTask","setSelectedTask","useParams","prev","toLowerCase","Home","defaultView","calendarType","showNavigation","formatShortWeekday","locale","date","getDay","formatDate","RewardTask","taskInfo","subject_type","time","colors","selectedColor","background","WebkitBackgroundClip","WebkitTextFillColor","fontFamily","fontStyle","fontWeight","lineHeight","margin","generateStyle","prefix","rewardIcon","RewardClasses","hasData","marginTop","cursor","goBack","aria-hidden","MathQuestion","onSelect","isEnable","random","correct","text","Timer","onFinish","onStart","onHalf","stopTimer","timerRef","useRef","warning","setWarning","clearInterval","minutes","seconds","IntervalId","setInterval","parseInt","current","textContent","floor","startTimer","ref","RewardExercise","isTimeFinish","setFinishTime","selectedAnswer","setSelectedAnswer","enableQuestion","setEnableNextQuestion","setStopTimer","examStatus","setExamStatus","answerReview","setAnswerReview","getExcercies","classId","handleSelectedAnswer","selection","getAnswerResult","indx","go","correctAnswer","checkedAns","FullScreenConfetti","canvas","setTimeOutId","end","Date","now","myConfetti","create","resize","offsetWidth","offsetHeight","frame","particleCount","angle","spread","origin","shapes","requestAnimationFrame","setTimeout","clearTimeout","reset","App","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a4441f47.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nfunction SideBar(props) {\r\n\r\n    const checkActive = (match, location) => {\r\n        if(!location) return false;\r\n        const {pathname} = location;\r\n        return pathname === \"/\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar off-canvas-sidebar\">\r\n            <NavLink to='/prolearn' className=\"logo\"><img src={logo} alt=\"\"/></NavLink>\r\n            <ul>\r\n            <li>\r\n                <NavLink to=\"/\" activeClassName=\"active\" isActive={checkActive}>\r\n                    <i className=\"fas fa-home\"></i>\r\n                    <span>Home </span>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/learning-path\">\r\n                    <i className=\"fas fa-road\"></i>\r\n                    <span>Learning Path</span>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/rewards\" activeClassName=\"active\">\r\n                    <i className=\"fas fa-gift\"></i>\r\n                    <span>Rewards</span>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/progress\" activeClassName=\"active\">\r\n                    <i className=\"fas fa-chart-line\"></i>\r\n                    <span>Progress</span>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/setting\">\r\n                    <i className=\"fas fa-cog\"></i>\r\n                    <span>Settings</span>\r\n                </NavLink>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","export const  TYPES = {\r\n    TASK_DONE: 'TASK_DONE',\r\n    TASK_LOADED: 'TASK_LOADED',\r\n    LOAD_REWARD_SUBJECT: 'LOAD_REWARD_SUBJECT',\r\n    REWARD_SUBJECT_LOADED: 'REWARD_SUBJECT_LOADED',\r\n    LOADING_REWARD_CLASS: 'LOADING_REWARD_CLASS',\r\n    REWARD_CLASS_LOADED: 'REWARD_CLASS_LOADED',\r\n    LOADING_REWARD_EXCERCIES: 'LOADING_REWARD_EXCERCIES',\r\n    REWARD_EXCERCIES_LOADED: 'REWARD_EXCERCIES_LOADED',\r\n    SHOW_CONFETTI: 'SHOW_CONFETTI',\r\n    HIDE_CONFETTI: 'HIDE_CONFETTI'\r\n};\r\n\r\n\r\nexport const  reducers = (state={}, action) => {\r\n    switch (action.type) {\r\n\r\n        case TYPES.TASK_DONE:\r\n            const index = state.completed_subject.findIndex(({name, id}) => action.payload.name === name);\r\n            //completed subject exist or add to complete\r\n            if(index >= 0) {\r\n                let completed_subject = state.completed_subject;\r\n                let selected = completed_subject[index];\r\n                \r\n                selected = {...selected, ...action.payload};\r\n                completed_subject[index] = selected;\r\n                \r\n                return {...state, completed_subject: [...completed_subject]};\r\n            }\r\n\r\n            const completed_subject = [...state.completed_subject];\r\n            completed_subject.push(action.payload);\r\n            return {\r\n                ...state,\r\n                completed_subject: [...completed_subject]\r\n            };\r\n        \r\n        case TYPES.TASK_LOADED:\r\n            return {\r\n                ...state,\r\n                subjects: [...action.payload]\r\n            }\r\n\r\n        case TYPES.LOAD_REWARD_SUBJECT:\r\n            return {\r\n                ...state,\r\n                reward: {\r\n                    ...state.reward,\r\n                    loading: true,\r\n                    subjects: null\r\n                }\r\n            };\r\n\r\n        case TYPES.REWARD_SUBJECT_LOADED:\r\n            return {\r\n                ...state,\r\n                reward: {\r\n                    ...state.reward,\r\n                    loading: false,\r\n                    subjects: action.payload\r\n                }\r\n            };\r\n        \r\n        case TYPES.LOADING_REWARD_CLASS:\r\n            return {\r\n                ...state,\r\n                reward:{\r\n                    ...state.reward,\r\n                    classes: {\r\n                        ...state.reward.classes,\r\n                        loading: true\r\n                    }\r\n                }\r\n            };\r\n\r\n        case TYPES.REWARD_CLASS_LOADED:\r\n            return {\r\n                ...state,\r\n                reward: {\r\n                    ...state.reward,\r\n                    classes: {\r\n                        ...state.reward.classes,\r\n                        ...action.payload,\r\n                        loading: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        case TYPES.LOADING_REWARD_EXCERCIES:\r\n            return {\r\n                ...state,\r\n                reward: {\r\n                    ...state.reward,\r\n                    classes: {\r\n                        ...state.reward.classes,\r\n                        excercies: {\r\n                            ...state.reward.classes.excercies,\r\n                            loading: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        \r\n        case TYPES.REWARD_EXCERCIES_LOADED:\r\n            return {\r\n                ...state,\r\n                reward: {\r\n                    ...state.reward,\r\n                    classes: {\r\n                        ...state.reward.classes,\r\n                        excercies: {\r\n                            ...state.reward.classes.excercies,\r\n                            loading: false,\r\n                            ...action.payload\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        case TYPES.SHOW_CONFETTI:\r\n            return {\r\n                ...state,\r\n                confetti: {\r\n                    ...state.confetti,\r\n                    ...action.payload,\r\n                    show: true\r\n                }\r\n            };\r\n        case TYPES.HIDE_CONFETTI:\r\n            return {\r\n                ...state,\r\n                confetti: {\r\n                    ...state.confetti,\r\n                    showTime: 15,\r\n                    message: '',\r\n                    show: false\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://prolearn-fb6bb.firebaseio.com';\r\n\r\nexport const fetchData = (path='/subjects.json') => {\r\n    //default path is [subjects.json]\r\n    return axios.get(path).then(resp => resp.data);\r\n}\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport{ reducers, TYPES }from './reducers';\r\nimport { fetchData } from '../utils/dataClient';\r\n\r\n//initial state\r\nconst initialState = {\r\n    completed_subject: [],\r\n    subjects: [],\r\n    reward: {\r\n        loading: false,\r\n        subjects: null,\r\n        classes: {\r\n            loading: false,\r\n            excercies: {\r\n                loading: false\r\n            }\r\n        }\r\n    },\r\n    confetti: {\r\n        show: false,\r\n        showTime: 15,\r\n        message: ''\r\n    }\r\n};\r\n\r\n//context provider we will use for extract data from this\r\nconst AppContext = createContext({\r\n    state: initialState,\r\n    dispatch: () => null\r\n});\r\n\r\n//provider that will wrap app entry point\r\nconst AppProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducers, initialState);\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n            .then(data => {\r\n                dispatch({\r\n                    type: TYPES.TASK_LOADED,\r\n                    payload: [...data]\r\n                });\r\n            })\r\n            .catch(er => console.log(er));\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport {AppProvider, AppContext};","import React, { useContext, useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppContext } from '../context/context';\r\n\r\nexport default function TaskCard({title, duration, description, ...rest}) {\r\n    const { state } = useContext(AppContext);\r\n    const [result, setResult] = useState({done: false, pass: false});\r\n\r\n    useEffect(() => {\r\n        const item = state.completed_subject.filter(item =>  title === item.name);\r\n        if(item.length) {\r\n            setResult({done: item[0].done, pass: item[0].pass});\r\n        }\r\n\r\n    }, [state, title]);\r\n\r\n    return (\r\n        // <div className={rest.column ? rest.column : 'col-md-4'}>\r\n\r\n        // </div>\r\n\r\n        <NavLink to={'/subject/'+ title} activeClassName='activeRoute'>\r\n        <div className=\"taskbox\">\r\n            <div className=\"header\">\r\n                <h4>{title ? title : 'History'} <span className=\"status\"></span> </h4>\r\n                <p>Estimated Time: {duration ? duration : '2 hours'}</p>\r\n            </div>\r\n            <div className=\"content\">\r\n                {description ? description : 'Questions about Modern World History will help you to understand even deeper about history.'}\r\n            </div>\r\n            <div className={result.done && result.pass ? 'done' : 'd-none'}>\r\n                <span className=\"text\">Done !</span>\r\n            </div>\r\n            <div className={result.done === true && result.pass === false ? 'fail' : 'd-none'}>\r\n                <span className=\"text\">Opps.. Try again !</span>\r\n            </div>\r\n        </div>\r\n    </NavLink>\r\n    );\r\n};\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function RightSidebar() {\r\n\r\n    return (\r\n        <div className=\"rightSidebar\">\r\n            <h3 className=\"title\">Weekly</h3>\r\n             <div className=\"box weeklyReport\">\r\n                 <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <i className=\"fas fa-graduation-cap\"></i>\r\n                        <h6>lesson taken</h6>\r\n                        <h4 className=\"first\">25</h4>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <i className=\"fas fa-clock\"></i>\r\n                        <h6>Time Spent</h6>\r\n                        <h4>2h 25m</h4>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <i className=\"fas fa-gift\"></i>\r\n                        <h6>Rewards</h6>\r\n                        <h4 className=\"last\">4</h4>\r\n                    </div>\r\n                 </div>\r\n             </div>\r\n\r\n            <div className=\"reward-wrap\">\r\n                <h3 className=\"title\">Rewards <a href=\"#\" className=\"gray\"> <i className=\"fas fa-caret-left\"></i> See all </a></h3>\r\n                <div className=\"box reward active\">\r\n                    <div className=\"media\">\r\n                        <i className=\"fas fa-gift\"></i>\r\n                        <div className=\"media-body\">\r\n                            <h4>10 mins early release to recess <span className=\"status\">NEW</span></h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* ennd reward */}\r\n                <div className=\"box reward\">\r\n                    <div className=\"media\">\r\n                        <i className=\"fas fa-gift\"></i>\r\n                        <div className=\"media-body\">\r\n                            <h4>Plus 2 marks for maths assessment</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* ennd reward */}\r\n                <div className=\"box reward\">\r\n                    <div className=\"media\">\r\n                        <i className=\"fas fa-gift\"></i>\r\n                        <div className=\"media-body\">\r\n                            <h4>“Get out of Tuition” Card</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* ennd reward */}\r\n                <div className=\"box reward\">\r\n                    <div className=\"media\">\r\n                        <i className=\"fas fa-gift\"></i>\r\n                        <div className=\"media-body\">\r\n                            <h4>Plus 1 mark for english assessment </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* ennd reward */}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport default function RecomendedPlayer({ url }) {\r\n\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"box player-container\">\r\n                <div className=\"row\">\r\n                    <div className='col-7'>\r\n                        <ReactPlayer \r\n                        url={url} \r\n                        width=\"100%\" height=\"100%\" \r\n                        controls\r\n                        config={{ file: { attributes: { controlsList: 'nodownload', preload: 'none'  } } }}\r\n                        onContextMenu={e => e.preventDefault()}/>\r\n                    </div>\r\n                    <div className=\"col pl-0\">\r\n                        <a href=\"#\" className=\"title\">How & Why We Read</a>\r\n                        <p>- CrashCourse</p>\r\n                        <div className=\"match\">\r\n                            <h3>36.4% <span>match</span></h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport './Spinner.css';\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <>\r\n            <div className=\"col-md-12\">\r\n                <div className=\"loader\">Loading...</div>\r\n            </div>\r\n        </>);\r\n    \r\n};\r\n","import React from 'react';\r\n\r\nconst INITIAL_OFFSET = 50;\r\nconst circleConfig = {\r\n  viewBox: '0 0 100 100',\r\n  x: '50',\r\n  y: '50',\r\n  radio: '40'\r\n};\r\n\r\nconst CircleProgressBarBase = ({\r\n  className,\r\n  trailStrokeColor,\r\n  strokeColor,\r\n  percentage,\r\n  innerText\r\n  }) => {\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                className=\"ring\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.y}\r\n                r={circleConfig.radio}\r\n                fill=\"transparent\"\r\n                stroke={trailStrokeColor}\r\n                strokeWidth=\"7\"\r\n                />\r\n                \r\n                <defs>\r\n                    <linearGradient id=\"linear\" x1=\"269.22\" y1=\"0%\">\r\n                        <stop offset=\"-3.37%\"   stopColor=\"#37A0F6\"/>\r\n                        <stop offset=\"99.26%\" stopColor=\"#387EE9\"/>\r\n                    </linearGradient>\r\n                </defs>\r\n\r\n                <circle\r\n                className=\"path\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.y}\r\n                r={circleConfig.radio}\r\n                fill=\"transparent\"\r\n                stroke=\"url(#linear)\"\r\n                strokeDasharray=\"282\"\r\n                strokeDashoffset={INITIAL_OFFSET}\r\n                strokeWidth=\"7\"\r\n                />\r\n                <g className=\"circle-label\">\r\n                <text x=\"50%\" y=\"50%\" className=\"circle-percentage\" textAnchor=\"middle\">\r\n                    {percentage}%\r\n                </text>\r\n                {/* <text x=\"50%\" y=\"50%\" className=\"circle-text\">\r\n                    {innerText}\r\n                </text> */}\r\n                </g>\r\n            </svg>\r\n        </figure>\r\n    );\r\n};\r\n\r\nexport default CircleProgressBarBase;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport { AppContext } from '../context/context';\r\nimport TaskCard from './TaskCard'\r\nimport RightSidebar from './RightSidebar';\r\nimport RecomendedPlayer from './RecomendedVideoPlayer/RecomendedPlayer';\r\nimport Spinner from './Spinner/Spinner';\r\nimport CircleProgressBar from './CircleProgressBar/CircleProgressBar';\r\n\r\nexport default function TaskListContainer(params) {\r\n    const [subject_list, setSubjectList] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    const {state} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n       setSubjectList(state.subjects);\r\n\r\n       if(state.subjects.length > 0) {\r\n            setShowSpinner(false);\r\n       }\r\n       \r\n    }, [state]);\r\n\r\n    return (\r\n        <div className=\"taskListContainer px-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-6 overViweWrap overview_footer_paddiing\">\r\n                    <CustomScroll heightRelativeToParent=\"100%\">\r\n                        <a href=\"#\" className=\"overview\"> <i className=\"fas fa-caret-left\"></i> OverView</a>\r\n                        <h1 className=\"title\">Todays Task</h1>\r\n                        <div className=\"row\">\r\n                                {subject_list.map(item => (\r\n                                    <div className=\"col-lg-6\" key={item.id}>\r\n                                        <TaskCard {...item}  />\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <h4 className=\"title mb-3 mt-3\">Recomended Tasks</h4>\r\n                        <div className=\"row\">\r\n                            {\r\n                                showSpinner ?\r\n                                    <Spinner />\r\n                                :\r\n                                (\r\n                                    <>\r\n                                      <RecomendedPlayer url=\"http://media.w3.org/2010/05/bunny/movie.mp4\" />\r\n                                      <RecomendedPlayer url=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"/>\r\n                                    </>\r\n                                 )\r\n                            }\r\n                        </div>\r\n                    </CustomScroll>\r\n                    <div className=\"over_viwe_footer\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                <h4 className=\"title mb-3\">Progress</h4>\r\n                                <div className=\"box\">\r\n                                    <CircleProgressBar \r\n                                        trailStrokeColor=\"#C4C4C4\"\r\n                                        strokeColor=\"#37A0F6\"\r\n                                        percentage={75}\r\n                                        innerText=\"complete\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <h4 className=\"title mb-3\">Quote Of The Day</h4>\r\n                                <div className=\"box quote\">\r\n                                   <h3>“There are no shortcuts to any place worth going.”</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-6\">\r\n                   <RightSidebar/>\r\n                </div>\r\n            </div>\r\n        </div>          \r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function HorizontalTimeLine({score}) {\r\n    return (\r\n        <div className=\"progress_wrap\">\r\n            <div className=\"progress-active\" style={{width: score+'%'}}></div>\r\n            <div className=\"mark_row\">\r\n                <span className={`mark ${score > 0 ? 'active' : ''}`}></span>\r\n                <span className={`mark ${score >= 50 ? 'active' : ''}`}></span>\r\n                <span className={`mark ${score >= 70 ? 'active' : ''}`}></span>\r\n                <span className={`mark ${score === 100 ? 'active' : ''}`}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport HorizontalTimeLine from '../../../utils/HorizontalTimeLine';\r\n\r\nexport default function RewardSubject({score, ...props}) {\r\n    const [showMenu, setShowMenu]  = useState(false);\r\n    let match = useRouteMatch();\r\n\r\n    const toggleDropDown = (e) => {\r\n        e.preventDefault();\r\n        setShowMenu(!showMenu);\r\n    }\r\n\r\n    function hideDropDown() {\r\n        setShowMenu(false);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const body = document.querySelector('body');\r\n        body.addEventListener('click', hideDropDown);\r\n        return () => {\r\n            body.removeEventListener('click', hideDropDown);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"col-lg-6\">\r\n            <Link to={{\r\n                pathname: `${match.url}/${props.id}`,\r\n                state: { subject_name: props.name }\r\n            }}>\r\n                <div className=\"test-history-progress\">\r\n                    <div className=\"header d-flex\">\r\n                        <span className=\"title mr-auto\">{props.name}</span>\r\n                        <div className=\"input-group-prepend position-relative\" onClick={toggleDropDown}>\r\n                            <span data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"fas fa-ellipsis-v\"></i></span>\r\n                            <div className={`dropdown-menu ${showMenu ? 'show': null}`} x-placement=\"bottom-start\">\r\n                                <button className=\"dropdown-item\" href=\"#\"> Edit</button>\r\n                                <button className=\"dropdown-item\" href=\"#\"> Delate</button>\r\n                                <button className=\"dropdown-item\" href=\"#\"> Report</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p>{props.class}</p>\r\n                    <p>{props.grade}</p>\r\n                    <div className=\"content\">\r\n                       <HorizontalTimeLine score={score}button/>\r\n                    </div>\r\n                    <div className=\"footer text-right\">\r\n                        Previous Test Score <strong>{score}/100</strong>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            </div>\r\n    );\r\n};\r\n\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport CustomScroll from 'react-custom-scroll';\r\n\r\nimport { AppContext } from '../../context/context';\r\nimport { TYPES } from '../../context/reducers';\r\n\r\nimport { fetchData } from '../../utils/dataClient';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport RewardSubject from './RewardSubject/RewardSubject';\r\nimport RightSidebar from '../RightSidebar';\r\n\r\n\r\nexport default function RewardClassContainer(props) {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const {state:{reward: {subjects, loading}}, dispatch} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n       \r\n        if(location.state && location.state.redirect) {\r\n            history.replace(location.state.redirect);\r\n        }\r\n\r\n        if(!subjects) {\r\n            fetchData('/reward.json')\r\n            .then(data => {\r\n                dispatch({\r\n                    type: TYPES.REWARD_SUBJECT_LOADED,\r\n                    payload: data.subjects\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n        }\r\n\r\n    }, [ subjects, dispatch]);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 overViweWrap\">\r\n                    <CustomScroll heightRelativeToParent=\"100%\">\r\n                        <div className=\"row\">\r\n                           {loading || !subjects ? <Spinner /> : subjects.map(item => (<RewardSubject score={item.previous_score} {...item} key={item.id} />))}\r\n                        </div>\r\n                    </CustomScroll>\r\n                </div>\r\n               <div className=\"col-md-4\">\r\n                    <RightSidebar />\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppContext } from '../../context/context';\r\nimport { TYPES } from '../../context/reducers';\r\n\r\nexport default function Literature({subject}) {\r\n    const [answer, setAnswer] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const {state, dispatch} = useContext(AppContext);\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(answer.length < 20) {\r\n            setError('answer should be greater than 20 character');\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: TYPES.TASK_DONE,\r\n            payload: {\r\n                done: true,\r\n                name: subject.title,\r\n                id: subject.id,\r\n                pass: true\r\n            }\r\n        });\r\n\r\n        setRedirect(true);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setAnswer(e.target.value);\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const item = state.completed_subject.filter(item => item.id === subject.id);\r\n\r\n        if(item.length && item[0].done) {\r\n            dispatch({\r\n                type: TYPES.TASK_DONE,\r\n                payload: {\r\n                    done: false,\r\n                    name: subject.title,\r\n                    id: subject.id\r\n                }\r\n            });\r\n        }\r\n        \r\n    }, [subject]);\r\n\r\n    return (\r\n        <div className='literature p-4'>\r\n            {redirect ? <Redirect to=\"/\" /> : null}\r\n            <h4 className=\"title\">Literature</h4>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div className=\"form-group\">\r\n                    <textarea style={{width: '100%', fontSize:'12px', height: '400px'}} \r\n                    className=\"form-control rounded\" name='answer' onChange={handleChange} \r\n                    value={answer} \r\n                    placeholder=\"Harper Lee’s was an American novelist widely known for To Kill a Mockingbird, published in 1960. Immediately\r\nsuccessful\" ></textarea>\r\n                    {error && <div className='alert alert-danger mt-2' style={{fontSize:'12px'}}>{error}</div>}\r\n                </div>\r\n                <div className=\"form-group text-right\">\r\n                    <button className=\"btn btn-info pl-5 pr-5\" onClick={handleFormSubmit}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default function CustomButton({className, ...props}){\r\n    return (\r\n        <div className={`custom-button ${className ? className : ''}`}>\r\n            <input type=\"radio\" name={props.name ? props.name : 'button'} id={props.id ? props.id : 'button'} onChange={props.handleChange} value={props.value ? props.value : ''} />\r\n            <label htmlFor={props.id ? props.id : 'button'}>{props.children}</label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Latex from 'react-latex';\r\nimport diagram from '../../assets/images/diagram.svg';\r\nimport CustomButton from '../CustomButton/CustomButton'\r\n\r\nexport default function Question({title, question, ...props}) {\r\n    const activeQs = props.activeQs;\r\n    title = question.hasImage ? (<p className=\"mb-0\">{title.split('--')[0]}<br/><br/> <img src={diagram} alt=''/> <br/><br/>{title.split('--')[1]}</p>) : <p className=\"mb-0\">{title}</p>;\r\n\r\n    return (\r\n        <div className={`box text-center question-container ${activeQs.has(question.id) !== false ? '' : 'not-active'}`}>\r\n\r\n           <div className=\"row\">\r\n               <div className=\"col-md-8 offset-md-2\">\r\n                    {title}\r\n               </div>\r\n           </div>\r\n\r\n            <div className=\"select-area d-flex justify-content-center\">\r\n                {question.guesses && question.guesses.map((item) => (\r\n                    <CustomButton id={item.guess} name={`question-${question.id}`} handleChange={() => props.handleChange({...item, question_id: question.id})} key={item.id} checked={false}>\r\n                       <Latex>{item.guess}</Latex> \r\n                    </CustomButton>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport { AppContext } from '../../context/context';\r\nimport { TYPES } from '../../context/reducers';\r\nimport Question from './Question';\r\n\r\nexport default function Physics({subject, ...rest}) {\r\n    const {state, dispatch} = useContext(AppContext);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [activeQs, setActiveQs] = useState(new Set([1]));\r\n    const [guesses, setGuesses] = useState([]);\r\n    const [ready, setReady] = useState(true);\r\n\r\n    const handleChange = (item) => {\r\n\r\n        //activing next question active after user chose one\r\n        activeQs.add(item.question_id+1);\r\n        setActiveQs(activeQs);\r\n\r\n        //loping over guess for checking that question allready answered or not\r\n        let found = false;\r\n        for(let guess of guesses) {\r\n            if(guess.question_id === item.question_id) {\r\n                guess.guess_id = item.id;\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        //checking guess found or not\r\n        if(!found) {\r\n            setGuesses([...guesses, {question_id: item.question_id, guess_id: item.id}]);\r\n        } else {\r\n            setGuesses([...guesses]);\r\n        }\r\n\r\n        //all question answerded or not\r\n        setReady(subject.questions.length !== activeQs.size-1);\r\n\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let correct_ans = 0;\r\n        for (let i in  guesses) {\r\n            if(guesses[i].question_id === subject.answers[i].question && guesses[i].guess_id === subject.answers[i].guess) {\r\n                correct_ans += 1;\r\n            } \r\n        }\r\n\r\n        dispatch({\r\n            type: TYPES.TASK_DONE,\r\n            payload: {\r\n                name: subject.title,\r\n                id: subject.id,\r\n                done: true,\r\n                pass: correct_ans >= Math.round(subject.answers.length/2)\r\n            }\r\n        });\r\n\r\n        setRedirect(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const item = state.completed_subject.filter(item => item.id === subject.id);\r\n        //reset course state for redo\r\n        if(item.length && item[0].done) {\r\n            dispatch({\r\n                type: TYPES.TASK_DONE,\r\n                payload: {\r\n                    done: false,\r\n                    name: subject.title,\r\n                    id: subject.id\r\n                }\r\n            });\r\n        }\r\n        \r\n    }, [subject]);\r\n\r\n\r\n    return (\r\n        <div className=\"physics px-3\">\r\n            {redirect && <Redirect to=\"/\" />}\r\n            <h4 className=\"title mb-3\">Physics</h4>\r\n            <div className=\"question-area\" style={{height: \"85vh\", display: \"flex\"}}>\r\n                <CustomScroll heightRelativeToParent=\"100%\">\r\n                    {/** question and guess component**/}\r\n                    {subject && subject.questions && subject.questions.map(item => (\r\n                        <Question  handleChange={handleChange} title={item.question} key={item.title+'-'+item.id} question={item} activeQs={activeQs} />\r\n                    ))}\r\n                    {/**submit button */}\r\n                    <div className=\"form-group text-center\">\r\n                        <button className=\"btn btn-info pl-5 pr-5\" onClick={handleSubmit} type=\"button\" disabled={ready}>Submit</button>\r\n                    </div>\r\n                </CustomScroll>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\n\r\nexport default function NotFound(params) {\r\n    return (\r\n        <div className=\"alert alert-warning text-center p-4\">\r\n            <h5>Component Not Found Try</h5>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport Literature from '../components/Literature/Literature';\r\nimport Physics from '../components/Physics/Physics';\r\nimport NotFound from '../components/NotFound';\r\n\r\nexport default function Component({name, ...rest}) {\r\n\r\n    const components = {\r\n        literature: Literature,\r\n        physics: Physics,\r\n        notfound: NotFound\r\n    }\r\n\r\n    name = components[name] ? name : 'notfound';\r\n\r\n    const TagName = components[name];\r\n\r\n    return (<TagName {...rest} />);\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AppContext } from '../context/context';\r\nimport TaskCard from './TaskCard';\r\nimport Component from '../utils/Components';\r\n\r\nexport default function TaskContainer(params) {\r\n    const [selectedTask, setSelectedTask] = useState(undefined);\r\n    const {state:{subjects}} = useContext(AppContext);\r\n    const { name } = useParams();\r\n\r\n    useEffect(() => {\r\n        let index = subjects.findIndex(item => item.title === name);\r\n        setSelectedTask(prev => (index >= 0 ? subjects[index] : null));\r\n    }, [subjects, name]);\r\n\r\n    return (\r\n        <div className=\"taskListContainer px-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 overViweWrap\">\r\n                    <div className=\"scroll_area\" style={{height:\"85vh\"}}>\r\n                        <CustomScroll heightRelativeToParent=\"100%\">\r\n                            <a href=\"#\" className=\"overview\"> <i className=\"fas fa-caret-left\"></i> OverView</a>\r\n                            <h1 className=\"title\">Todays Task</h1>\r\n                            <div className=\"row\">\r\n                                    {subjects && subjects.map(item => (\r\n                                        <div className=\"col-lg-12\" key={item.id}>\r\n                                            <TaskCard {...item} />\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </CustomScroll>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    {selectedTask ? <Component name={name.toLowerCase()} subject={selectedTask} /> : <h3>Component not ready</h3>}\r\n                    {/* {selectedSubject ? <Component name={name.toLowerCase()} subject={selectedSubject} /> : <h3 className=\"mt-5 pt-5 text-center\">Component not ready</h3>} */}\r\n                </div>\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n};\r\n","import React from 'react'\r\nimport Calender from 'react-calendar';\r\nimport CircleProgressBar from '../CircleProgressBar/CircleProgressBar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default function Home(props) {\r\n    \r\n    const formatDate = (locale, date) => {\r\n        const name = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\r\n        return name[date.getDay()];\r\n    }\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            <Calender defaultView=\"day\" calendarType=\"US\" showNavigation={false} formatShortWeekday={(locale, date) => formatDate(locale, date)}/>\r\n\r\n            <CircleProgressBar \r\n             trailStrokeColor=\"gray\"\r\n             strokeColor=\"teal\"\r\n             percentage={75}\r\n             innerText=\"complete\"\r\n\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport rewardIcon from '../../../../assets/images/reward.svg';\r\n\r\n\r\nexport default function RewardTask({taskInfo}) {\r\n    const match = useRouteMatch();\r\n\r\n    const generateStyle = (time) => {\r\n        const colors = [\r\n            ['#37A0F6', '#387EE9'],\r\n            ['#FB872B', '#D9E021'],\r\n            ['#D4145A', '#FBB03B '],\r\n        ]\r\n        \r\n        let selectedColor = colors[0]\r\n\r\n        if (time > 10 && time <= 30) {\r\n            selectedColor = colors[1];\r\n        } else if (time > 30) {\r\n            selectedColor = colors[2];\r\n        }\r\n\r\n        return {\r\n            background: `linear-gradient(90deg, ${selectedColor[0]} 0%, ${selectedColor[1]} 100%)`,\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            fontFamily: 'Rubik',\r\n            fontStyle: 'normal',\r\n            fontWeight: 500,\r\n            fontSize: '48px',\r\n            lineHeight: '57px',\r\n            margin: '1em 0'\r\n        }\r\n   };\r\n\r\n    return (\r\n        <div className=\"col-md-4\">\r\n            <div className=\"card p-4 shadow rounded h-75\">\r\n                <Link to={match.url+'/'+taskInfo.id}>\r\n                    <h5>{taskInfo.title}</h5>\r\n                    <h4 className=\"text-dark\">{taskInfo.subject_type}</h4>\r\n                    <h1 style={{...generateStyle(taskInfo.time)}}>{taskInfo.time}{taskInfo.prefix}</h1>\r\n                    <p>\r\n                        <strong className=\"d-block\">description</strong>\r\n                        {taskInfo.description}\r\n                    </p>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"card p-2 shadow\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <img src={rewardIcon} alt=\"reward\" className=\"img-fluid\"/> \r\n                    <div className=\"text ml-4\">\r\n                        <strong>Reward</strong>\r\n                        <p>{taskInfo.reward.message}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport RewardTask from './RewardTask/RewardTask';\r\nimport { AppContext } from '../../../context/context';\r\nimport { TYPES } from '../../../context/reducers';\r\nimport { fetchData } from '../../../utils/dataClient';\r\nimport Spinner from '../../Spinner/Spinner';\r\n\r\nexport default function RewardClasses(props) {\r\n    const {state: { reward: { classes }}, dispatch} = useContext(AppContext);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    const goBack = () => history.goBack();\r\n    const { subject_name } = history.location.state;\r\n\r\n    const hasData = () => {\r\n        return classes[params.id];\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!hasData()) {\r\n            \r\n            dispatch({\r\n                type: TYPES.LOADING_REWARD_CLASS\r\n            });\r\n\r\n            fetchData(`/reward/classes/${params.id}.json`)\r\n            .then(data => {\r\n                dispatch({\r\n                    type: TYPES.REWARD_CLASS_LOADED,\r\n                    payload: {\r\n                        [params.id]: data\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\" style={{marginTop: '100px'}}>\r\n                <div className=\"col-md-12\">\r\n                    <strong style={{cursor: 'pointer'}} className=\"d-block mb-4\" onClick={goBack}><i className=\"fas fa-angle-left\" aria-hidden=\"true\"></i> {subject_name}</strong>\r\n                    <h2>Suplimentary Classes</h2>\r\n                    <p>These supplementary classes will help you to learn, understand and practice topics that you need more help in.</p>\r\n\r\n                    <div className=\"row\">\r\n                        {\r\n                            classes.loading || hasData() === undefined ? <Spinner /> \r\n                            : hasData() ? \r\n                            hasData().map(item => (\r\n                                <RewardTask taskInfo={item} key={item.id}/>\r\n                            ))\r\n                            : <div className=\"alert alert-warning text-center\">Not Found Any Reward class for this subject</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Latex from 'react-latex';\r\nimport CustomButton from '../../../CustomButton/CustomButton';\r\n\r\nexport default function MathQuestion({question, onSelect, isEnable, index, result}) {\r\n\r\n    \r\n    return (\r\n        <div className=\"col-md-8 offset-md-2\">\r\n            <div className={`d-flex justify-content-center question-container ${isEnable ? '' : 'not-active'}`}>\r\n                <div className=\"math-question\">\r\n                    <Latex>{question.question}</Latex>\r\n                </div>\r\n                <div className=\"assignment\">\r\n                    <i className=\"fas fa-equals\"></i>\r\n                </div>\r\n                <div className=\"guesses d-flex justify-content-between\">\r\n                    {question.guesses.map(guess => (\r\n                        <CustomButton \r\n                        id={Math.random()} \r\n                        name={question.question} \r\n                        handleChange={() => \r\n                        onSelect({guess: guess.id, question_id: question.id, index})}\r\n                        className={result && result.guess === guess.id ? `${result.correct ? 'correct' : 'wrong'}` : ''} \r\n                        key={guess.id}>\r\n                             <Latex>\r\n                               {guess.text}\r\n                            </Latex>\r\n                        </CustomButton>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect, useRef, useState} from 'react';\r\n\r\n\r\nexport default function Timer({duration, onFinish, onStart, onHalf, stopTimer}) {\r\n    const timerRef = useRef();\r\n    const [warning, setWarning] = useState(false);\r\n\r\n    const startTimer = (duration = 0) => {\r\n        let time = duration*60, minutes, seconds;\r\n        //notifying onStart Listener\r\n        \r\n        if(onStart) {\r\n            onStart();\r\n        }\r\n\r\n        let IntervalId = setInterval(() => {\r\n            minutes = parseInt(time / 60, 10);\r\n            seconds = parseInt(time % 60, 10);\r\n\r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n            seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n            timerRef.current.textContent = `${minutes}:${seconds}`;\r\n\r\n            if(time === (duration / 2)) {\r\n                if(onHalf) onHalf();\r\n            }\r\n\r\n            if(!warning && (time - Math.floor(duration*60/5)) <= 0) {\r\n                //show timer warning if time getting lower\r\n                setWarning(true);\r\n            } else if(time === (duration * 60)) {\r\n                // hide timer warning if reinitilize component \r\n                setWarning(false);\r\n            }\r\n\r\n            if (time <= 0) {\r\n                clearInterval(IntervalId);\r\n                if(onFinish) {\r\n                    onFinish();\r\n                }\r\n            }\r\n            --time;\r\n\r\n        }, 1000);\r\n\r\n        return IntervalId;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let id;\r\n        \r\n        if(stopTimer) {\r\n            clearInterval(id);\r\n        }\r\n\r\n        if(duration && !stopTimer) {\r\n            id = startTimer(duration);\r\n        }\r\n\r\n        return () => clearInterval(id);\r\n    }, [duration, stopTimer]);\r\n\r\n    return (\r\n        <div className=\"card p-4 text-center\">\r\n           <div className=\"counter-wrapper\">\r\n                <div className={`counter ${warning ? 'warning' : ''}`} ref={timerRef}></div>\r\n                <h4>Time Remening</h4>\r\n           </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { useParams, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { AppContext } from '../../../context/context';\r\nimport { TYPES } from '../../../context/reducers';\r\nimport { fetchData } from '../../../utils/dataClient';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport MathQuestion from './MathQuestion/MathQuestion';\r\nimport Timer from '../../Timer/Timer';\r\nimport RightSidebar from '../../RightSidebar';\r\nimport CustomScroll  from 'react-custom-scroll';\r\n\r\nexport default function RewardExercise(props) {\r\n    const {state: { reward: { classes : { excercies }}}, dispatch} = useContext(AppContext);\r\n    const [isTimeFinish, setFinishTime] = useState(false);\r\n    let [selectedAnswer, setSelectedAnswer] = useState([]);\r\n    const [enableQuestion, setEnableNextQuestion] = useState(new Set());\r\n    const [stopTimer, setStopTimer] = useState(false);\r\n    const [examStatus, setExamStatus] = useState(null);\r\n    const [answerReview, setAnswerReview] = useState([]);\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n    \r\n\r\n    const getExcercies = () => {\r\n        return excercies[params.classId];\r\n    }\r\n\r\n    const handleSelectedAnswer = ({index, ...selection}) => {\r\n\r\n        setEnableNextQuestion(prev => new Set([...prev, index+1]));\r\n\r\n        if(!selectedAnswer.length) {\r\n            setSelectedAnswer([...selectedAnswer, selection]);\r\n            return;\r\n        }\r\n\r\n        let found = selectedAnswer.findIndex(item => item.question_id === selection.question_id);\r\n\r\n        if(found >= 0) {\r\n            selectedAnswer[found] = selection;\r\n        } else {\r\n            selectedAnswer = [...selectedAnswer, selection];\r\n        }\r\n\r\n        setSelectedAnswer([...selectedAnswer]);\r\n\r\n    }\r\n\r\n    const redo = () => {\r\n        history.replace('/rewards', {'redirect': match.url});\r\n    }\r\n\r\n    const takeAnotherLession = () => {\r\n        history.go(-2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const url = `/reward/classes/excercies/${params.classId}.json`;\r\n\r\n        if(!getExcercies()) {\r\n            dispatch({\r\n                type: TYPES.LOADING_REWARD_EXCERCIES\r\n            });\r\n\r\n            fetchData(url)\r\n            .then(data => {\r\n                dispatch({\r\n                    type: TYPES.REWARD_EXCERCIES_LOADED,\r\n                    payload: {\r\n                        [params.classId]: data\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n\r\n    const onFinishTime = () => {\r\n        setFinishTime(true);\r\n    }\r\n\r\n    const handleSubmitExcercies = () => {\r\n        setStopTimer(true);\r\n        const correctAnswer = [\r\n            {question_id: 'frac-1', guess: 1},\r\n            {question_id: 'frac-2', guess: 2},\r\n            {question_id: 'frac-3', guess: 3},\r\n            {question_id: 'frac-4', guess: 2},\r\n        ];\r\n\r\n        let checkedAns = selectedAnswer.map((item, index) => {\r\n            if(item.question_id === correctAnswer[index].question_id && item.guess === correctAnswer[index].guess) {\r\n                item.correct = true;\r\n            } else {\r\n                item.correct = false;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        const givenAnswerLength =  checkedAns.filter(answer => answer.correct === true).length;\r\n        if(givenAnswerLength >= (correctAnswer.length - 1)) {\r\n            setExamStatus('pass')\r\n            dispatch({\r\n                type: TYPES.SHOW_CONFETTI,\r\n                payload: {\r\n                    show: true,\r\n                    showTime: 10,\r\n                    message: getExcercies().title\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setExamStatus('fail');\r\n        }\r\n\r\n        setAnswerReview([...checkedAns]);\r\n        setFinishTime(true);\r\n    }\r\n\r\n\r\n    const getAnswerResult = (id) => {\r\n        const item = answerReview.filter(item => item.question_id === id);\r\n        if(item) return item[0];\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row step-down pt-4\">\r\n                <div className=\"col-md-8\">\r\n                    <CustomScroll heightRelativeToParent=\"100%\">\r\n                        {\r\n                            (excercies.loading || getExcercies() === undefined) ? <Spinner /> :\r\n                                (getExcercies() !== null) ? getExcercies().questions.map((item, indx) => (\r\n                                    <MathQuestion \r\n                                    question={item} \r\n                                    key={item.id} \r\n                                    onSelect={handleSelectedAnswer} \r\n                                    isEnable={enableQuestion.has(indx) || indx === 0} \r\n                                    index={indx}\r\n                                    result={examStatus ? getAnswerResult(item.id) : false} />\r\n                                ))\r\n                                : <div className=\"alert alert-warning text-center\">No Excercies Found For This Subject.</div> \r\n                        }\r\n\r\n                        {getExcercies() ?\r\n                            <div className=\"form-group text-center\">\r\n                                {\r\n                                    isTimeFinish ? (\r\n                                    <>\r\n                                        <button className=\"btn btn-info pl-5 pr-5 mr-4 btn-lg other\" onClick={takeAnotherLession}>Other Classes</button>\r\n                                        <button className=\"btn btn-info pl-5 pr-5\" onClick={redo}>Redo Test</button>\r\n                                    </>\r\n                                    ) : (\r\n                                    <button \r\n                                    className=\"btn btn-info pl-5 pr-5 btn-lg\" \r\n                                    onClick={handleSubmitExcercies}\r\n                                    disabled={getExcercies() && getExcercies().questions.length !== selectedAnswer.length}>\r\n                                        Submit\r\n                                    </button>\r\n                                    )\r\n                                }\r\n                            </div> : null}\r\n\r\n                    </CustomScroll>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Timer duration={getExcercies() ? getExcercies().duration : 0} onFinish={onFinishTime} stopTimer={stopTimer}/>\r\n                    <RightSidebar />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport confetti from 'canvas-confetti';\r\nimport { AppContext } from '../../context/context';\r\nimport { TYPES } from '../../context/reducers';\r\n\r\nexport default function FullScreenConfetti() {\r\n    const canvas = useRef();\r\n    const {state: {confetti: {show, showTime, message}}, dispatch} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        const end = Date.now() + (showTime * 1000);\r\n        let myConfetti = (canvas.current ? canvas.current.confetti : null) || confetti.create(canvas.current, {resize: true});;\r\n        let setTimeOutId;\r\n\r\n        if(canvas.current) {\r\n            canvas.current.style.width ='100%';\r\n            canvas.current.style.height='100%';\r\n            // ...then set the internal size to match\r\n            canvas.current.width  = canvas.current.offsetWidth;\r\n            canvas.current.height = canvas.current.offsetHeight;\r\n    \r\n            var colors = ['#E7077A', '#F6EE37', '#37A0F6'];\r\n    \r\n            (function frame() {\r\n                myConfetti({\r\n                    particleCount: 3,\r\n                    angle: 60,\r\n                    spread: 55,\r\n                    origin: { x: 0 },\r\n                    colors: colors,\r\n                    shapes: ['circle', 'square', 'lines']\r\n                });\r\n                myConfetti({\r\n                    particleCount: 3,\r\n                    angle: 120,\r\n                    spread: 55,\r\n                    origin: { x: 1 },\r\n                    colors: colors,\r\n                    shapes: ['circle', 'square', 'lines']\r\n                });\r\n    \r\n                if (Date.now() < end) {\r\n                    requestAnimationFrame(frame);\r\n                }\r\n            }());\r\n    \r\n            setTimeOutId = setTimeout(() => {\r\n    \r\n                dispatch({\r\n                    type: TYPES.HIDE_CONFETTI\r\n                });\r\n    \r\n                if(!show) {\r\n                    clearTimeout(setTimeOutId);\r\n                }\r\n    \r\n            }, (showTime * 1000));\r\n        }\r\n\r\n        return () => {\r\n            myConfetti.reset();\r\n            clearTimeout(setTimeOutId);\r\n        }\r\n\r\n    }, [show]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {show ?\r\n                <div className=\"full-screen-confetti\">\r\n                    <canvas ref={canvas} width=\"100%\" height=\"100%\">\r\n                    </canvas>\r\n                    <div className=\"message\">\r\n                        <h2>Congratulation!</h2>\r\n                        <h5>You’re done with <span className=\"highlight\">{message}</span></h5>\r\n                    </div>\r\n                </div>\r\n            : null\r\n            }\r\n        </>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport SideBar from \"./components/SideBar\";\r\nimport TaskListContainer from \"./components/TaskListContainer\";\r\nimport RewardClassContainer from './components/RewardClassContainer/RewardClassContainer';\r\nimport { AppProvider } from './context/context';\r\nimport TaskContainer from \"./components/TaskContainer\";\r\nimport Home from \"./components/Home/Home\";\r\nimport RewardClasses from \"./components/RewardClassContainer/RewardClasses/RewardClasses\";\r\nimport RewardExercise from \"./components/RewardClassContainer/RewardExercise/RewardExercise\";\r\nimport FullScreenConfetti from \"./components/FullScreenConfetti/FullScreenConfetti\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"main-panel\">\r\n          <Router>\r\n            <AppProvider>\r\n              {/* sidebar */}\r\n                <SideBar />\r\n                {/* main content  */}\r\n                <FullScreenConfetti />\r\n                <Switch>\r\n                  <Route exact path='/'>\r\n                    <TaskListContainer />\r\n                  </Route>\r\n\r\n                  <Route exact path=\"/subject/:name\">\r\n                    <TaskContainer />\r\n                  </Route>\r\n\r\n                  <Route  exact path=\"/rewards\">\r\n                    <RewardClassContainer />\r\n                  </Route>\r\n\r\n                  <Route exact path=\"/rewards/:id\">\r\n                      <RewardClasses />\r\n                  </Route>\r\n\r\n                  <Route exact path=\"/rewards/:subjectId/:classId\">\r\n                      <RewardExercise />\r\n                  </Route>\r\n\r\n                  <Route exact path=\"/prolearn\">\r\n                      <Home />\r\n                  </Route>\r\n\r\n                </Switch>\r\n            </AppProvider>\r\n          </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/custom-scroll.css';\nimport './assets/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.9bff32ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/diagram.dab5baf0.svg\";","module.exports = __webpack_public_path__ + \"static/media/reward.8b4481f1.svg\";"],"sourceRoot":""}